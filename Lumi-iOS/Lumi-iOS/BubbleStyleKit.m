//
//  BubbleStyleKit.m
//  Lumi Connect v2
//
//  Created by Martin Kuvandzhiev on 6/6/16.
//  Copyright (c) 2016 Rapid Development Crew. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "BubbleStyleKit.h"


@implementation BubbleStyleKit

#pragma mark Cache

static UIColor* _shadowColor = nil;
static UIColor* _redOuter = nil;
static UIColor* _redInner = nil;
static UIColor* _greenOuter = nil;
static UIColor* _greenInner = nil;
static UIColor* _blueOuter = nil;
static UIColor* _blueInner = nil;
static UIColor* _cyanOuter = nil;
static UIColor* _cyanInner = nil;
static UIColor* _purpleInner = nil;
static UIColor* _purpleOuter = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _shadowColor = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    _redOuter = [UIColor colorWithRed: 1 green: 0.321 blue: 0.321 alpha: 1];
    _redInner = [UIColor colorWithRed: 1 green: 0.59 blue: 0.335 alpha: 1];
    _greenOuter = [UIColor colorWithRed: 0 green: 0.814 blue: 0.017 alpha: 1];
    _greenInner = [UIColor colorWithRed: 0 green: 1 blue: 0.825 alpha: 1];
    _blueOuter = [UIColor colorWithRed: 0 green: 0.391 blue: 1 alpha: 1];
    _blueInner = [UIColor colorWithRed: 0 green: 0.886 blue: 1 alpha: 1];
    _cyanOuter = [UIColor colorWithRed: 0 green: 0.738 blue: 1 alpha: 1];
    _cyanInner = [UIColor colorWithRed: 0 green: 0.951 blue: 1 alpha: 1];
    _purpleInner = [UIColor colorWithRed: 1 green: 0 blue: 0.946 alpha: 1];
    _purpleOuter = [UIColor colorWithRed: 0.774 green: 0 blue: 1 alpha: 1];

}

#pragma mark Colors

+ (UIColor*)shadowColor { return _shadowColor; }
+ (UIColor*)redOuter { return _redOuter; }
+ (UIColor*)redInner { return _redInner; }
+ (UIColor*)greenOuter { return _greenOuter; }
+ (UIColor*)greenInner { return _greenInner; }
+ (UIColor*)blueOuter { return _blueOuter; }
+ (UIColor*)blueInner { return _blueInner; }
+ (UIColor*)cyanOuter { return _cyanOuter; }
+ (UIColor*)cyanInner { return _cyanInner; }
+ (UIColor*)purpleInner { return _purpleInner; }
+ (UIColor*)purpleOuter { return _purpleOuter; }

#pragma mark Drawing Methods

+ (void)drawLumiViewWithInnerCircleColor: (UIColor*)innerCircleColor outerCircleColor: (UIColor*)outerCircleColor innerTextString: (NSString*)innerTextString viewFrame: (CGRect)viewFrame
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* reflectionBottomColor = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0];

    //// Gradient Declarations
    CGFloat bubbleColorGradientLocations[] = {0, 0.68, 1};
    CGGradientRef bubbleColorGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)innerCircleColor.CGColor, (id)[innerCircleColor blendedColorWithFraction: 0.5 ofColor: outerCircleColor].CGColor, (id)outerCircleColor.CGColor], bubbleColorGradientLocations);
    CGFloat reflectionColorGradientLocations[] = {0, 0.59, 1};
    CGGradientRef reflectionColorGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)UIColor.whiteColor.CGColor, (id)[UIColor.whiteColor blendedColorWithFraction: 0.5 ofColor: reflectionBottomColor].CGColor, (id)reflectionBottomColor.CGColor], reflectionColorGradientLocations);

    //// Shadow Declarations
    NSShadow* bubbleShadow = [[NSShadow alloc] init];
    [bubbleShadow setShadowColor: [BubbleStyleKit.shadowColor colorWithAlphaComponent: CGColorGetAlpha(BubbleStyleKit.shadowColor.CGColor) * 0.37]];
    [bubbleShadow setShadowOffset: CGSizeMake(0.1, -0.1)];
    [bubbleShadow setShadowBlurRadius: 16];

    //// Variable Declarations
    CGRect bubbleFrame = CGRectMake(viewFrame.size.width * 0.1, viewFrame.size.height * 0.1f, viewFrame.size.width * 0.8f, viewFrame.size.height * 0.8f);
    CGFloat textSize = bubbleFrame.size.height * 0.15;
    CGSize reflectionSize = CGSizeMake(bubbleFrame.size.width * 0.4, bubbleFrame.size.height * 0.16);
    CGPoint reflectionPosition = CGPointMake(bubbleFrame.origin.x + bubbleFrame.size.width / 2.0 - reflectionSize.width / 2.0, bubbleFrame.origin.y + bubbleFrame.size.height * 0.02);

    //// Group
    {
        //// Bubble Drawing
        CGRect bubbleRect = CGRectMake(bubbleFrame.origin.x, (bubbleFrame.origin.y - 1), bubbleFrame.size.width, bubbleFrame.size.height);
        UIBezierPath* bubblePath = [UIBezierPath bezierPathWithOvalInRect: bubbleRect];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, bubbleShadow.shadowOffset, bubbleShadow.shadowBlurRadius, [bubbleShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);
        [bubblePath addClip];
        CGFloat bubbleResizeRatio = MIN(CGRectGetWidth(bubbleRect) / 609, CGRectGetHeight(bubbleRect) / 605);
        CGContextDrawRadialGradient(context, bubbleColorGradient,
            CGPointMake(CGRectGetMidX(bubbleRect) + 0 * bubbleResizeRatio, CGRectGetMidY(bubbleRect) + 0 * bubbleResizeRatio), 23.85 * bubbleResizeRatio,
            CGPointMake(CGRectGetMidX(bubbleRect) + 0 * bubbleResizeRatio, CGRectGetMidY(bubbleRect) + 0 * bubbleResizeRatio), 307.63 * bubbleResizeRatio,
            kCGGradientDrawsBeforeStartLocation | kCGGradientDrawsAfterEndLocation);
        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);

        NSMutableParagraphStyle* bubbleStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
        bubbleStyle.alignment = NSTextAlignmentCenter;

        NSDictionary* bubbleFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"Futura-Medium" size: textSize], NSForegroundColorAttributeName: UIColor.whiteColor, NSParagraphStyleAttributeName: bubbleStyle};

        CGFloat bubbleTextHeight = [innerTextString boundingRectWithSize: CGSizeMake(bubbleRect.size.width, INFINITY)  options: NSStringDrawingUsesLineFragmentOrigin attributes: bubbleFontAttributes context: nil].size.height;
        CGContextSaveGState(context);
        CGContextClipToRect(context, bubbleRect);
        [innerTextString drawInRect: CGRectMake(CGRectGetMinX(bubbleRect), CGRectGetMinY(bubbleRect) + (CGRectGetHeight(bubbleRect) - bubbleTextHeight) / 2, CGRectGetWidth(bubbleRect), bubbleTextHeight) withAttributes: bubbleFontAttributes];
        CGContextRestoreGState(context);


        //// reflection Drawing
        CGRect reflectionRect = CGRectMake(reflectionPosition.x, reflectionPosition.y, reflectionSize.width, reflectionSize.height);
        UIBezierPath* reflectionPath = [UIBezierPath bezierPathWithOvalInRect: reflectionRect];
        CGContextSaveGState(context);
        [reflectionPath addClip];
        CGContextDrawLinearGradient(context, reflectionColorGradient,
            CGPointMake(CGRectGetMidX(reflectionRect), CGRectGetMinY(reflectionRect)),
            CGPointMake(CGRectGetMidX(reflectionRect), CGRectGetMaxY(reflectionRect)),
            0);
        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(bubbleColorGradient);
    CGGradientRelease(reflectionColorGradient);
    CGColorSpaceRelease(colorSpace);
}

@end



@implementation UIColor (PaintCodeAdditions)

- (UIColor*)blendedColorWithFraction: (CGFloat)fraction ofColor: (UIColor*)color2
{
    UIColor* color1 = self;

    CGFloat r1 = 0, g1 = 0, b1 = 0, a1 = 0;
    CGFloat r2 = 0, g2 = 0, b2 = 0, a2 = 0;


    [color1 getRed: &r1 green: &g1 blue: &b1 alpha: &a1];
    [color2 getRed: &r2 green: &g2 blue: &b2 alpha: &a2];

    CGFloat r = r1 * (1 - fraction) + r2 * fraction;
    CGFloat g = g1 * (1 - fraction) + g2 * fraction;
    CGFloat b = b1 * (1 - fraction) + b2 * fraction;
    CGFloat a = a1 * (1 - fraction) + a2 * fraction;

    return [UIColor colorWithRed: r green: g blue: b alpha: a];
}

@end
